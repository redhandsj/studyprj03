★Seasar2_徹底入門.pdf
 - (CHAPTER 02) S2Container (P.038 - 126)
しおり　：　
URL　:　

★ 2017/11/13(月)に、新規作成

//==========================================================================================================
// 2.1 はじめての S2Container
//==========================================================================================================
■ プロジェクト作成
 - http://eclipse.seasar.org/updates/3.2/

 - 準備（http://itmemo.net-luck.com/seasar2-sastruts-s2jdbc/）
---------------------------------------------------------
 必要なプラグインは、以下の5つ。

「Tomcat Launcher」
「Dolteng」
「SAStrutsPlugin」
「ResourceSynchronizer」
「PropertiesEditor」
なお、「Tomcat Launcher」は、Pleiades All in Oneパッケージの場合、すでに入っているので省略。

Eclipseを起動し、メニューバーの「ヘルプ」⇒「新規ソフトウェアのインストール」を開く。

「作業対象」に「http://propedit.sourceforge.jp/eclipse/updates/」を入力し、「追加」ボタンを押下する。

一覧が表示されるので、「プロパティーエディター」にチェックし、「次へ」ボタンで進み、インストールする。

「作業対象」に「http://eclipse.seasar.org/updates/3.3/」を入力し、「追加」ボタンを押下する。

一覧が表示されるので、「Dolteng」、「SAStrutsPlugin」、「ResourceSynchronizer」、にチェックし、「次へ」ボタンで進み、インストールする。

プラグインのインストール後は、Eclipseの再起動を促されるので、再起動する。
---------------------------------------------------------

⇒ s2sample プロジェクト作成

■ 2.1.2 Hello,Seasar2 !
■ 2.1.3 S2Container の初期化
■ 2.1.4 コンポーネントの取得
 ⇒ s2sample Main.java に記載

■ 2.1.5 DIの設定
 - diconファイル
   - propertyタグで明示的に指定


//==========================================================================================================
// 2.2　 コンポーネントの定義
//==========================================================================================================
<component>
class → クラス名
name → コンポーネント名
instance → ライフサイクル ※重要！！！！
autoBinding → 自動バインディング設定
</component>

■2.2.1 コンポーネントのライフサイクル
 - singleton (標準) → 何度getしても同じインスタンス
 - prototype → getの度に新しいインスタンス
 - request → リクエストごとにインスタンス生成
 - session → sessionごとにインスタンス生成
 - application → サーブレットコンテキストごと
 - outer → インスタンスをコンテナの外で生成
⇒ /s2sample/src/main/resources/app.dicon に追加
 - 自分より短いライフサイクルのDIはできない


//==========================================================================================================
// 2.3　 インジェクションの種類
//==========================================================================================================

■2.3.1 コンストラクタインジェクション
  ⇒ public class HelloMessageProvider
     - コンストラクタを作成

■2.3.2 セッターインジェクション
  ⇒ public class HelloMessageProvider
     - setInjectStrを作成

■2.3.3 メソッドインジェクション
  ⇒ public class HelloMessageProvider
     - addListを作成
       ※ !!!!!!!!!!!!! 失敗

■2.3.4 自動バインディング
  - autoBindingタグ
    - auto → コンストラクタとプロパティに対して自動バインディング
    - semiauto → アノテーションなどで指定した場合
    - constructor → コンストラクタ
    - property → プロパティ
    - none → 自動バインディングなし


■2.3.5 外部バインディング
   <component externalBinding="true" />

//==========================================================================================================
// 2.4　 OGNL
//==========================================================================================================
■2.4.1 OGNLの使用例
■2.4.2 OGNLリファレンス
※省略



//==========================================================================================================
// 2.5　 インクルードと名前空間
//==========================================================================================================
■2.5.1 includeタグによるインクルード
 - diconファイルの親子関係
  <components>
    <include path="foo.dicon"/>
    <include path="bar.dicon"/>
  </components>
 - コンポーネント検索は、親から子の順に実行
 - インクルードdicon切り替え
   - webアプリでは、JARファイルより、WEBINF/classes が優先順位が高い





//==========================================================================================================
// 2.6　 AOP
//==========================================================================================================

//==========================================================================================================
// 2.7　 自動登録
//==========================================================================================================

//==========================================================================================================
// 2.8　 アノテーション
//==========================================================================================================

//==========================================================================================================
// 2.9　 Web アプリケーションでの利用
//==========================================================================================================

//==========================================================================================================
// 2.10　環境ごとの切り替え
//==========================================================================================================

//==========================================================================================================
// 2.11　SMART deploy
//==========================================================================================================

//==========================================================================================================
// 2.12　dicon ファイルの構成
//==========================================================================================================

//==========================================================================================================
// 2.13　dicon ファイルリファレンス
//==========================================================================================================







//==========================================================================================================
//==========================================================================================================
// 問題
//==========================================================================================================


//==========================================================================================================
// 未整頓メモ
//==========================================================================================================


//==========================================================================================================
// <END>
//==========================================================================================================
